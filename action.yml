name: 'Generate Java Client'
description: 'Generates a Java client from a swagger document'
inputs:
  swagger-doc:
    description: 'Path to the swagger document'
    required: true
  language:
    description: 'Generated client language'
    required: true
  group-id:
    description: 'Package owner'
    required: true
  artifact-id:
    description: 'Package name'
    required: true
  version:
    description: 'Package version'
    required: true
  templates:
    description: 'Path to swagger codegen templates directory'
    required: false
  package-name:
    description: 'Java package name (appended to group-id)'
    required: false
    default: client
  java-date-library:
    description: 'Java date library for Swagger Codegen'
    required: false
    default: java8
runs:
  using: 'composite'
  steps:

    - name: Validate language
      if: ${{ !contains(fromJson('["java", "typescript-fetch"]'), inputs.language) }}
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('Specified language is not supported')

    # Java
    - if: ${{ inputs.language == 'java' }}
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: adopt
        server-id: github
        settings-path: ${{ github.workspace }}

    - if: ${{ inputs.language == 'java' }}
      run: |
        docker run --rm -v ${PWD}:/local openapitools/openapi-generator-cli:v7.5.0 generate \
        -i local/${{ inputs.swagger-doc }} \
        --artifact-id ${{ inputs.artifact-id }} \
        --group-id ${{ inputs.group-id }} \
        --api-package ${{ inputs.group-id }}.${{ inputs.package-name }}.controllers \
        --model-package ${{ inputs.group-id }}.${{ inputs.package-name }}.model \
        --invoker-package ${{ inputs.group-id }}.${{ inputs.package-name }} \
        --library okhttp-gson \
        $( [[ "${{ inputs.templates }}" != "" ]] && printf %s '-t /local/${{ inputs.templates }}' ) \
        -g java \
        -o /local \
      shell: bash

    - if: ${{ inputs.language == 'java' }}
      run: |
        sudo chmod -R a+w .
        mvn versions:set -DnewVersion=${{ inputs.version }}
        mvn -B package
        mvn versions:commit
        mvn -B -s ${{ github.workspace }}/settings.xml deploy \
          -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/$GITHUB_REPOSITORY
      shell: bash

    # Typescript-fetch
    - if: ${{ inputs.language == 'typescript-fetch' }}
      uses: actions/setup-node@v2
      with:
        node-version: 12
        registry-url: https://npm.pkg.github.com/

    - if: ${{ inputs.language == 'typescript-fetch' }}
      run: |
        docker run --rm -v ${PWD}:/local openapitools/openapi-generator-cli:v7.5.0 generate \
        -i local/${{ inputs.swagger-doc }} \
        -g typescript-fetch \
        -o /local \
        $( [[ "${{ inputs.templates }}" != "" ]] && printf %s '-t /local/${{ inputs.templates }}' ) \
        --additional-properties=npmName=${{ inputs.group-id }}/${{ inputs.artifact-id }},npmVersion=${{ inputs.version }}
        sudo chmod a+w package.json
        echo $(cat package.json | jq -r --arg REPO "$GITHUB_REPOSITORY" '.repository = {type: "git", url: ("https://github.com/" + $REPO + ".git")}') > package.json
      shell: bash

    - if: ${{ inputs.language == 'typescript-fetch' }}
      name: Publish
      run: |
        npm install
        npm test
        npm publish
      shell: bash
